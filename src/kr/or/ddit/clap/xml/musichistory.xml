<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
			PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
			"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<!-- namespace속성 : 아래에서 작성한 SQL을 호출할 때 같이 사용된다. -->			
<sqlMap namespace="musichistory">
	
	 
	 <select id="todayselect" resultClass="java.util.HashMap">
	 		select * 
			  from
				   (select count(a.mus_no) as count,
					       b.mus_no,
					       b.mus_title,
					       b.mus_befor_rank,
					       b.mus_mvfile,
					       c.alb_image,
					       c.alb_no,
					       d.sing_no,
					       d.sing_name
					  from music_history a, music b, album c, singer d
					 where a.mus_no = b.mus_no
					   and b.alb_no = c.alb_no
					   and c.sing_no = d.sing_no
					   and a.histo_indate like to_char(sysdate-1,'YY/MM/DD')||'%'
					 group by b.mus_no, b.mus_title, b.mus_befor_rank, b.mus_mvfile, d.sing_name, c.alb_image,c.alb_no,d.sing_no
					 order by count(a.mus_no) desc)
			 where rownum &lt;= 50
	 </select>
	 
<!-- 	 뮤직메인에 들어가는 실시간차트 -->
	 <select id="top10select" resultClass="java.util.HashMap">
	 		select * 
			  from
				   (select count(a.mus_no) as count,
					       b.mus_no,
					       b.mus_title,
					       b.mus_befor_rank,
					       b.mus_mvfile,
					       c.alb_image,
					       c.alb_no,
					       d.sing_no,
					       d.sing_name
					  from music_history a, music b, album c, singer d
					 where a.mus_no = b.mus_no
					   and b.alb_no = c.alb_no
					   and c.sing_no = d.sing_no
					   and a.histo_indate like to_char(sysdate-1,'YY/MM/DD')||'%'
					 group by b.mus_no, b.mus_title, b.mus_befor_rank, b.mus_mvfile, d.sing_name, c.alb_image,c.alb_no,d.sing_no
					 order by count(a.mus_no) desc)
			 where rownum &lt;= 10
	 </select>
	 
	 <select id="periodselect" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
	 		select * 
			  from
				   (select count(a.mus_no) as count,
					       b.mus_no,
					       b.mus_title,
					       b.mus_befor_rank,
					       b.mus_mvfile,
					       c.alb_image,
					       c.alb_no,
					       d.sing_no,
					       d.sing_name
					  from music_history a, music b, album c, singer d
					 where a.mus_no = b.mus_no
					   and b.alb_no = c.alb_no
					   and c.sing_no = d.sing_no
					   and a.histo_indate &gt;= #startday#
           			   and a.histo_indate &lt;= #endday#
					 group by b.mus_no, b.mus_title, b.mus_befor_rank, b.mus_mvfile, d.sing_name, c.alb_image, c.alb_no, d.sing_no
					 order by count(a.mus_no) desc)
			 where rownum &lt;= 50
	 </select>
	 
	 <select id="genreselect" resultClass="java.util.HashMap" parameterClass="String">
	 		select * 
			  from
				   (select count(a.mus_no) as count,
					       b.mus_no,
					       b.mus_title,
					       b.mus_befor_rank,
					       b.mus_mvfile,
					       c.alb_image,
					       c.alb_no,
					       d.sing_no,
					       d.sing_name
					  from music_history a, music b, album c, singer d, genre_detail f
					 where a.mus_no = b.mus_no
					   and b.alb_no = c.alb_no
					   and c.sing_no = d.sing_no
                       and b.gen_detail_no = f.gen_detail_no
                       and a.histo_indate like to_char(sysdate-1,'YY/MM/DD')||'%'
                       and f.gen_no = #gen_no#
					 group by b.mus_no, b.mus_title, b.mus_mvfile, b.mus_befor_rank, d.sing_name, c.alb_image, c.alb_no, d.sing_no
					 order by count(a.mus_no) desc)
			 where rownum &lt;= 50
	 </select>
	 
	  <select id="interiorselect" resultClass="java.util.HashMap" parameterClass="String">
	 		select * 
			  from
				   (select count(a.mus_no) as count,
					       b.mus_no,
					       b.mus_title,
					       b.mus_mvfile,
					       b.mus_befor_rank,
					       c.alb_image,
					       c.alb_no,
					       d.sing_no,
					       d.sing_name
					  from music_history a, music b, album c, singer d
					 where a.mus_no = b.mus_no
					   and b.alb_no = c.alb_no
					   and c.sing_no = d.sing_no
                       and a.histo_indate like '%' || #year# || '%'
                       and d.sing_nation = '한국'
					 group by b.mus_no, b.mus_title,b.mus_befor_rank,b.mus_mvfile,d.sing_name,c.alb_image,c.alb_no, d.sing_no
					 order by count(a.mus_no) desc)
			 where rownum &lt;= 50
	 </select>
	 
	 <select id="foreignselect" resultClass="java.util.HashMap" parameterClass="String">
	 		select * 
			  from
				   (select count(a.mus_no) as count,
					       b.mus_no,
					       b.mus_title,
					       b.mus_mvfile,
					       b.mus_befor_rank,
					       c.alb_image,
					       c.alb_no,
					       d.sing_no,
					       d.sing_name
					  from music_history a, music b, album c, singer d
					 where a.mus_no = b.mus_no
					   and b.alb_no = c.alb_no
					   and c.sing_no = d.sing_no
                       and a.histo_indate like '%' || #year# || '%'
                       and d.sing_nation != '한국'
					 group by b.mus_no, b.MUS_TITLE,b.mus_befor_rank,d.sing_name, c.alb_image, c.alb_no, d.sing_no, b.mus_mvfile
					 order by count(a.mus_no) desc)
			 where rownum &lt;= 50
	 </select>
	 
	  
	 
	 <!--현지 -->
	 <select id="selectMayIts" resultClass="MusicHistoryVO" parameterClass="MusicHistoryVO">
			select count(a.mus_no) as count,
					       b.mus_no,
					       d.sing_name as name,
                           b.mus_title as title,
                           a.mem_id
					  from music_history a, music b, album c, singer d
					 where a.mus_no = b.mus_no
					   and b.alb_no = c.alb_no
					   and c.sing_no = d.sing_no
                       and a.mem_id=#mem_id#
					 group by b.mus_no, b.MUS_TITLE,d.sing_name,a.mem_id
					 order by count(a.mus_no) desc 
                     
	 </select>
	 
	  <!--현지 -->
	 <select id="selectMayIndate" resultClass="MusicHistoryVO" parameterClass="MusicHistoryVO">
	   select count(a.mus_no) as count,
                   a.histo_indate,
					       b.mus_no,
					       d.sing_name as name,
                           b.mus_title as title,
                           a.mem_id
					  from music_history a, music b, album c, singer d
					 where a.mus_no = b.mus_no
					   and b.alb_no = c.alb_no
					   and c.sing_no = d.sing_no
                       and a.mem_id=#mem_id#
					 group by b.mus_no, b.MUS_TITLE,d.sing_name,a.mem_id, a.histo_indate
					 order by a.histo_indate desc
	  
		</select>
		
		<select id="selectNewLisMus" resultClass="MusicHistoryVO" parameterClass="String">
		select			 count(a.mus_no) as histo_no,
					       b.mus_no,
					       d.sing_name as name,
                           b.mus_title as title,
                           a.mem_id,
                           c.alb_image as image,
                           max(a.histo_indate) as histo_indate
					  from music_history a, music b, album c, singer d
					 where a.mus_no = b.mus_no
					   and b.alb_no = c.alb_no
					   and c.sing_no = d.sing_no
                       and a.mem_id=#id#
					 group by b.mus_no, b.MUS_TITLE,d.sing_name,a.mem_id, c.alb_image
					 order by histo_indate desc 
		</select>
		<select id="selectManyLisMus" resultClass="MusicHistoryVO" parameterClass="String">
		select			 count(a.mus_no) as histo_no,
					       b.mus_no,
					       d.sing_name as name,
                           b.mus_title as title,
                           a.mem_id,
                           c.alb_image as image,
                           max(a.histo_indate) as histo_indate
					  from music_history a, music b, album c, singer d
					 where a.mus_no = b.mus_no
					   and b.alb_no = c.alb_no
					   and c.sing_no = d.sing_no
                       and a.mem_id=#id#
					 group by b.mus_no, b.MUS_TITLE,d.sing_name,a.mem_id, c.alb_image
					order by count(a.mus_no) desc 
		</select>
		<select id="selectManyIts" resultClass="MusicHistoryVO" parameterClass="String">
		select			 a.mus_no , 
					      count( d.sing_name) as histo_no,  
                          d.sing_name as name,
                           d.sing_debut_mus  as title, 
                           a.mem_id,
                           d.sing_image as image,
                           d.sing_debut_era as histo_indate
					  from music_history a, music b, album c, singer d
					 where a.mus_no = b.mus_no
					   and b.alb_no = c.alb_no
					   and c.sing_no = d.sing_no
                       and a.mem_id=#id#
					 group by d.sing_debut_mus,a.mem_id, d.sing_image, a.mus_no,d.sing_name,d.sing_debut_era
					 order by count(d.sing_name) desc 
		</select>
	
		<update id="historyinsert" parameterClass="musichistoryVO">
	        insert into music_history (histo_no, histo_indate, mus_no, mem_id)
	         values (seq_histo_no.nextval, sysdate, #mus_no#, #mem_id#)
		</update>

</sqlMap>			





