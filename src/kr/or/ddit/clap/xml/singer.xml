<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
         PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
         "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<!-- namespace속성 : 아래에서 작성한 SQL을 호출할 때 같이 사용된다. -->

	<sqlMap namespace="singer">


		<select id="selectListAll" resultClass="singerVO">
			select sing_no,sing_name,sing_act_type,
			sing_act_era,sing_debut_era,sing_debut_mus,sing_image from
			singer order by to_number(sing_NO) desc
		</select>

		<!-- 검색용 쿼리 -->
		<select id="searchList" resultClass="singerVO"
			parameterClass="singerVO">
			select sing_no, sing_name, sing_act_type, sing_act_era,
			sing_debut_era, sing_debut_mus, sing_image from singer
			<dynamic prepend="where">
				<isNotEmpty property="sing_name" prepend="and">
					sing_name like '%' || #sing_name# || '%'
				</isNotEmpty>
				<isNotEmpty property="sing_debut_mus" prepend="and">
					sing_debut_mus like '%' || #sing_debut_mus# || '%'
				</isNotEmpty>
			</dynamic>
		</select>

		<select id="singerDetailInfo" resultClass="singerVO"
			parameterClass="String">
			select SING_NO, SING_NAME, SING_NATION, SING_INDATE,
			SING_ACT_TYPE, SING_DEBUT_MUS, SING_ACT_ERA, SING_IMAGE,
			SING_DEBUT_ERA, SING_INTRO from SINGER WHERE SING_NO =
			#String#
		</select>

		<!-- //좋이요 갯수 쿼리 -->
		<!-- <select id="selectSingerLikeCnt" resultClass="int" parameterClass="String"> 
			select count(SING_NO) from SINGER where SING_NO =#String# </select> -->

		<select id="selectSingerLikeCnt" resultClass="int"
			parameterClass="String">
			select count(*) from SINGER_LIKE where SING_NO =#String#
		</select>

		<!-- 가수정보 수정 쿼리 -->
		<update id="updateSingerInfo" parameterClass="singerVO">
			update singer set SING_NAME = #sing_name#, SING_NATION =
			#sing_nation#, SING_ACT_TYPE = #sing_act_type#,
			SING_DEBUT_MUS = #sing_debut_mus#, SING_ACT_ERA =
			#sing_act_era#, SING_IMAGE = #sing_image#, SING_DEBUT_ERA =
			#sing_debut_era#, SING_INTRO = #sing_intro# where
			SING_NO=#sing_no#
		</update>

		<!-- 가수정보등록 쿼리 -->
		<insert id="insertSinger" parameterClass="singerVO">
			<selectKey resultClass="String" keyProperty="sing_no">
				select SEQ_SING_NO.nextval from dual
			</selectKey>
			insert into singer (SING_NO, SING_NAME, SING_NATION,
			SING_ACT_TYPE, SING_DEBUT_MUS, SING_ACT_ERA, SING_IMAGE,
			SING_DEBUT_ERA, SING_INTRO) values (#sing_no#, #sing_name#,
			#sing_nation#, #sing_act_type#, #sing_debut_mus#,
			#sing_act_era#, #sing_image#, #sing_debut_era#,
			#sing_intro#)
		</insert>


		<!-- 가수정보를 삭제하는 쿼리 -->
		<delete id="deleteSinger" parameterClass="String">
			delete from singer where SING_NO=#String#
		</delete>

		<!-- 좋아요를 눌렀는지 체크하는 조회쿼리 -->
		<select id="checkHeartYN" resultClass="int"
			parameterClass="java.util.HashMap">
			SELECT COUNT(*) FROM SINGER_LIKE WHERE SING_NO = #singerNo#
			and MEM_ID = #id#
		</select>

		<!-- 좋아요를 취소하는 쿼리 -->
		<delete id="deleteSingerLike"
			parameterClass="java.util.HashMap">
			delete from SINGER_LIKE WHERE SING_NO = #singerNo# and
			MEM_ID = #id#
		</delete>

		<!-- 좋아요 증가하는 쿼리 -->
		<insert id="insertSingerLike"
			parameterClass="java.util.HashMap">
			insert into SINGER_LIKE( MEM_ID, SING_NO, SING_LIKE_DATE )
			values( #id#, #singerNo#, sysdate )
		</insert>

		<select id="selectReply" resultClass="java.util.HashMap"
			parameterClass="String">
			select a.sing_re_no, a.sing_re_content,
			to_char(a.sing_re_indate) as sing_re_indate , a.mem_id,
			a.sing_no, b.mem_image from SINGER_REVIEW a , member b where
			a.mem_id = b.mem_id and sing_no = #String#
			order by sing_re_no desc
		</select>

		<!-- 가수댓글작성 -->

		<insert id="insertReply" parameterClass="java.util.HashMap">
			insert into SINGER_REVIEW(

			SING_RE_NO, SING_RE_CONTENT, SING_RE_INDATE, MEM_ID, SING_NO
			) values( SEQ_SING_RE_NO.nextval, #contents#, sysdate,
			#mem_id#, #singerNo# )
		</insert>

		<!-- 신고횟수 카운트 쿼리 -->
		<update id="insertBlackCnt" parameterClass="String">
			update member set MEM_BLACK_CNT= MEM_BLACK_CNT+1 where
			mem_id =#String#
		</update>



		<!-- 가수댓글을 삭제하는 쿼리 -->
		<delete id="deleteSigerReply" parameterClass="String">
			delete from SINGER_REVIEW where SING_RE_NO=#String#
		</delete>

	</sqlMap>




